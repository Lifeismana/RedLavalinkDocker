name: "Get Jar, Build And Publish"
description: "Get lavalink's jar, build the docker image of it and publish it to github"

inputs:
  tag:
    description: "tag of the release to use"
    required: true
  release:
    description: "is this a release (true/false)"
    required: true
  prerelease:
    description: "is this a prerelease (true/false)" 
    required: true
runs:
  using: "composite"
  steps:
    - 
      name: Download Jar
      uses: Legion2/download-release-action@v2.1.0
      with:
        repository: Lifeismana/RedLavalinkDocker  #Cog-Creators/Lavalink-Jars
        tag: ${{inputs.tag}}
        path: docker-build
        file: Lavalink.jar
    - 
      name: Prepare
      shell: bash
      id: prepare
      run: |
        TAG_PRERELEASE=""
        if ${{ inputs.prerelease }}; then
          TAG_PRERELEASE="${{ env.GHCR_SLUG }}:nightly"
        fi

        TAG_RELEASE=""
        if ${{ inputs.release }}; then
          TAG_RELEASE="${{ env.GHCR_SLUG }}:lastest"
        fi

        echo ::set-output name=tag_release::${TAG_RELEASE}
        echo ::set-output name=tag_prerelease::${TAG_PRERELEASE}
        echo ::set-output name=build_date:: $(date -u +'%Y-%m-%dT%H:%M:%SZ')
    -
      name: Build and push 
      uses: docker/build-push-action@v2
      with:
        context: docker-build
        platforms: ${{ steps.buildx.outputs.platforms }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.GHCR_SLUG }}:${{inputs.tag}}
          ${{ steps.prepare.outputs.tag_release }}
          ${{ steps.prepare.outputs.tag_prerelease }}          
        cache-from: |
          ${{ env.GHCR_SLUG }}:${{inputs.tag}}
        labels: |
          maintainer=${{ github.repository_owner }}
    -
      name: Check manifest
      shell: bash
      run: |
        if [ ${{github.event_name != 'pull_request'}} ]; then
          docker buildx imagetools inspect ${{ env.GHCR_SLUG }}:${{inputs.tag}}
        fi
    -
      name: Check pull
      shell: bash
      run: |
        if [ ${{github.event_name != 'pull_request'}} ]; then
          docker pull ${{ env.GHCR_SLUG }}:${{inputs.tag}}
          docker image inspect ${{ env.GHCR_SLUG }}:${{inputs.tag}}
        fi